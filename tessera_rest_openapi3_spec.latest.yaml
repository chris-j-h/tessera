openapi: 3.0.1
info:
  title: Tessera API reference
  description: >
    Tessera exposes several independent server APIs that are configured at
    startup:


    * quorum-to-tessera

    * peer-to-peer

    * third-party


    Depending on the configuration of the node, not all server APIs may be available.
  version: latest-ff07437c
tags:
  - name: quorum-to-tessera
    description: Operations for Quorum clients
  - name: peer-to-peer
    description: Operations for Tessera clients
  - name: third-party
    description: Operations for third party clients (for example external tools)
paths:
  /api:
    get:
      tags:
        - quorum-to-tessera
        - peer-to-peer
        - third-party
      summary: /api
      description: returns JSON or HTML OpenAPI document
      operationId: getOpenApiDocument
      responses:
        "200":
          description: JSON or HTML OpenAPI document
          content:
            application/json:
              schema:
                type: string
                description: JSON OpenAPI document
            application/yaml:
              schema:
                type: string
                description: YAML OpenAPI document
        "400":
          description: Unsupported mediaType
  /storeraw:
    post:
      tags:
        - quorum-to-tessera
        - third-party
      summary: /storeraw
      description: encrypts a payload and stores result in the "raw" database
      operationId: encryptAndStoreVersion
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/com.quorum.tessera.api.StoreRawRequest"
          application/vnd.tessera-2.1+json:
            schema:
              $ref: "#/components/schemas/com.quorum.tessera.api.StoreRawRequest"
        required: true
      responses:
        "200":
          description: hash of encrypted payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/com.quorum.tessera.api.StoreRawResponse"
            application/vnd.tessera-2.1+json:
              schema:
                $ref: "#/components/schemas/com.quorum.tessera.api.StoreRawResponse"
        "404":
          description: "'from' key in request body not found"
  /upcheck:
    get:
      tags:
        - quorum-to-tessera
        - peer-to-peer
        - third-party
      summary: /upcheck
      description: simple operation to check the server is up
      operationId: upcheck
      responses:
        "200":
          description: upcheck response
          content:
            text/plain:
              schema:
                type: string
              examples:
                I'm up!:
                  description: I'm up!
                  value: I'm up!
                Database unavailable:
                  description: Database unavailable
                  value: Database unavailable
  /version/distribution:
    get:
      tags:
        - quorum-to-tessera
        - peer-to-peer
        - third-party
      summary: /version/distribution
      description: Tessera distribution version
      operationId: getDistributionVersion
      responses:
        "200":
          description: Tessera distribution version
          content:
            text/plain:
              schema:
                type: string
              example: 20.10.1
  /version/api:
    get:
      tags:
        - quorum-to-tessera
        - peer-to-peer
        - third-party
      summary: /version/api
      description: list currently available API versions
      operationId: getApiVersions
      responses:
        "200":
          description: list of available API versions
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
                - "1.0"
                - "2.0"
  /version:
    get:
      tags:
        - quorum-to-tessera
        - peer-to-peer
        - third-party
      summary: /version
      description: Tessera distribution version
      operationId: getVersion
      responses:
        "200":
          description: Tessera distribution version
          content:
            text/plain:
              schema:
                type: string
              example: 20.10.1
      deprecated: true
  /partyinfo:
    get:
      tags:
        - peer-to-peer
      summary: /partyinfo
      description: fetch network/peer information
      operationId: getPartyInfo
      responses:
        "200":
          description: server's partyinfo data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/com.quorum.tessera.p2p.model.GetPartyInfoResponse"
    post:
      tags:
        - peer-to-peer
      summary: /partyinfo
      description: broadcast partyinfo information to server
      operationId: broadcastPartyInfo
      parameters:
        - name: tesseraSupportedApiVersions
          in: header
          description: client's supported API versions
          schema:
            type: array
            items:
              type: string
      requestBody:
        description: partyinfo object
        content:
          application/octet-stream:
            schema:
              type: array
              items:
                type: string
                format: byte
        required: true
      responses:
        "200":
          description: server successfully updated its party info
          content:
            application/octet-stream:
              schema:
                type: array
                items:
                  type: string
                  description: empty if server is using remote key validation, else is encoded
                    partyinfo object containing only the server's URL
                  format: byte
        "500":
          description: Validation failed (if server is using remote key validation)
  /partyinfo/validate:
    post:
      tags:
        - peer-to-peer
      summary: /partyinfo/validate
      description: decrypt a UUID payload (used to validate ownership of an asymmetric
        key pair)
      operationId: validateParty
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: array
              description: encrypted UUID
              items:
                type: string
                description: encrypted UUID
                format: byte
      responses:
        "200":
          description: successfully decrypted payload
          content:
            text/plain:
              schema:
                type: string
                description: decrypted UUID
        "400":
          description: decrypted payload is not a valid UUID
  /pushPrivacyGroup:
    post:
      tags:
        - peer-to-peer
      summary: /pushPrivacyGroup
      description: store privacy group's encoded data
      operationId: pushPrivacyGroup
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: array
              items:
                type: string
                format: byte
        required: true
      responses:
        "200":
          description: privacy group payload stored successfully
  /pushBatch:
    post:
      tags:
        - peer-to-peer
      summary: /pushBatch
      description: store batch of encoded payloads to the server's database (available
        only when the server is in recovery mode)
      operationId: pushPayloadBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/com.quorum.tessera.p2p.recovery.PushBatchRequest"
        required: true
      responses:
        "200":
          description: batch successfully stored
  /push:
    post:
      tags:
        - peer-to-peer
      summary: /push
      description: store encoded payload to the server's database
      operationId: pushPayload
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: array
              description: encoded payload
              items:
                type: string
                description: encoded payload
                format: byte
      responses:
        "201":
          description: hash of encoded payload
          content:
            text/plain:
              schema:
                type: string
                description: hash of encrypted payload
                format: base64
        "403":
          description: server is in recovery mode and encoded payload is not a Standard
            Private transaction
  /resend:
    post:
      tags:
        - peer-to-peer
      summary: /resend
      description: initiate resend of either an INDIVIDUAL transaction or ALL
        transactions involving a given public key
      operationId: requestPayloadResend
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/com.quorum.tessera.p2p.resend.ResendRequest"
        required: true
      responses:
        "200":
          description: resent payload
          content:
            text/plain:
              schema:
                type: array
                items:
                  type: string
                  description: empty if request was for ALL; else the encoded INDIVIDUAL
                    transaction
                  format: byte
  /resendBatch:
    post:
      tags:
        - peer-to-peer
      summary: /resendBatch
      description: initiate resend of all transactions for a given public key in batches
      operationId: requestPayloadBatchResend
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/com.quorum.tessera.p2p.recovery.ResendBatchRequest"
        required: true
      responses:
        "200":
          description: count of total transactions being resent
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/com.quorum.tessera.p2p.recovery.ResendBatchResponse"
  /receive:
    post:
      tags:
        - quorum-to-tessera
      summary: /receive
      description: get payload from database, decrypt, and return. This endpoint is
        only to be used by Besu
      operationId: getDecryptedPayloadJson
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/com.quorum.tessera.api.ReceiveRequest"
          application/vnd.orion.v1+json:
            schema:
              $ref: "#/components/schemas/com.quorum.tessera.api.ReceiveRequest"
      responses:
        "200":
          description: decrypted payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/com.quorum.tessera.api.BesuReceiveResponse"
            application/vnd.orion.v1+json:
              schema:
                $ref: "#/components/schemas/com.quorum.tessera.api.BesuReceiveResponse"
  /encodedpayload/create:
    post:
      tags:
        - quorum-to-tessera
      summary: /encodedpayload/create
      description: encrypt a payload and return the result; does not store to the
        database or push to peers
      operationId: encrypt
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/com.quorum.tessera.api.SendRequest"
          application/vnd.tessera-2.1+json:
            schema:
              $ref: "#/components/schemas/com.quorum.tessera.api.SendRequest"
      responses:
        "200":
          description: encrypted payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/com.quorum.tessera.api.PayloadEncryptResponse"
            application/vnd.tessera-2.1+json:
              schema:
                $ref: "#/components/schemas/com.quorum.tessera.api.PayloadEncryptResponse"
  /encodedpayload/decrypt:
    post:
      tags:
        - quorum-to-tessera
      summary: /encodedpayload/decrypt
      description: decrypt an encrypted payload and return the result; does not store
        to the database or push to peers
      operationId: decrypt
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/com.quorum.tessera.api.PayloadDecryptRequest"
          application/vnd.tessera-2.1+json:
            schema:
              $ref: "#/components/schemas/com.quorum.tessera.api.PayloadDecryptRequest"
      responses:
        "200":
          description: decrypted payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/com.quorum.tessera.api.ReceiveResponse"
            application/vnd.tessera-2.1+json:
              schema:
                $ref: "#/components/schemas/com.quorum.tessera.api.ReceiveResponse"
  /retrievePrivacyGroup:
    post:
      tags:
        - quorum-to-tessera
      summary: /retrievePrivacyGroup
      description: retrieve privacy group from a privacy group id
      operationId: retrievePrivacyGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/com.quorum.tessera.api.PrivacyGroupRetrieveRequest"
      responses:
        "200":
          description: A privacy group object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/com.quorum.tessera.api.PrivacyGroupResponse"
        "404":
          description: privacy group not found
  /createPrivacyGroup:
    post:
      tags:
        - quorum-to-tessera
      summary: /createPrivacyGroup
      description: creates a privacy group, stores data in database, and distribute to
        members
      operationId: createPrivacyGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/com.quorum.tessera.api.PrivacyGroupRequest"
      responses:
        "200":
          description: created privacy group
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/com.quorum.tessera.api.PrivacyGroupResponse"
        "403":
          description: privacy group not supported on remote member
  /findPrivacyGroup:
    post:
      tags:
        - quorum-to-tessera
      summary: /findPrivacyGroup
      description: find all the privacy groups that contain the specified members
      operationId: findPrivacyGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/com.quorum.tessera.api.PrivacyGroupSearchRequest"
      responses:
        "200":
          description: An array of privacy group objects for all privacy groups containing
            only the specified members
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/com.quorum.tessera.api.PrivacyGroupResponse"
  /deletePrivacyGroup:
    post:
      tags:
        - quorum-to-tessera
      summary: /deletePrivacyGroup
      description: mark a privacy group as deleted
      operationId: deletePrivacyGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/com.quorum.tessera.api.PrivacyGroupDeleteRequest"
      responses:
        "200":
          description: id of the deleted privacy group
          content:
            application/json:
              schema:
                type: string
        "404":
          description: privacy group not found
  "/groups/{type}":
    get:
      tags:
        - quorum-to-tessera
      operationId: getPrivacyGroups
      parameters:
        - name: type
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /sendraw:
    post:
      tags:
        - quorum-to-tessera
      summary: /sendraw
      description: encrypts a payload, stores result in database, and publishes result
        to recipients
      operationId: encryptStoreAndSendOctetStream
      parameters:
        - name: c11n-from
          in: header
          description: public key identifying the server's key pair that will be used in
            the encryption; if not set, default used
          schema:
            type: string
            format: base64
        - name: c11n-to
          in: header
          description: comma-separated list of recipient public keys
          schema:
            type: string
            format: base64
      requestBody:
        content:
          application/octet-stream:
            schema:
              maxItems: 2147483647
              minItems: 1
              type: array
              description: data to be encrypted
              items:
                type: string
                description: data to be encrypted
                format: byte
        required: true
      responses:
        "200":
          description: encrypted payload hash
          content:
            text/plain:
              schema:
                type: string
                description: encrypted payload hash
                format: base64
  /receiveraw:
    get:
      tags:
        - quorum-to-tessera
      summary: /receiveraw
      description: get payload from database, decrypt, and return
      operationId: getDecryptedPayloadOctetStream
      parameters:
        - name: c11n-key
          in: header
          required: true
          schema:
            type: string
            description: hash indicating encrypted payload to retrieve from database
            format: base64
        - name: c11n-to
          in: header
          schema:
            type: string
            description: (optional) public key of recipient of the encrypted payload; used
              in decryption; if not provided, decryption is attempted with all
              known recipient keys in turn
            format: base64
      responses:
        "200":
          description: decrypted ciphertext payload
          content:
            application/octet-stream:
              schema:
                type: array
                items:
                  type: string
                  description: decrypted ciphertext payload
                  format: byte
  /delete:
    post:
      tags:
        - quorum-to-tessera
      summary: /delete
      description: delete payload from database
      operationId: deleteDeprecated
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/com.quorum.tessera.api.DeleteRequest"
      responses:
        "200":
          description: delete successful
          content:
            text/plain:
              schema:
                type: string
              example: Delete successful
      deprecated: true
  "/transaction/{hash}/isSender":
    get:
      tags:
        - quorum-to-tessera
      summary: /transaction/{hash}/isSender
      description: check if the server was the sender of a transaction
      operationId: isSender
      parameters:
        - name: hash
          in: path
          description: hash indicating encrypted payload to check sender for
          required: true
          schema:
            type: string
            format: base64
      responses:
        "200":
          description: is server the sender
          content:
            text/plain:
              schema:
                type: boolean
  /sendsignedtx:
    post:
      tags:
        - quorum-to-tessera
      summary: /sendsignedtx
      description: re-wraps a pre-stored & pre-encrypted payload, stores result in
        database, and publishes result to recipients
      operationId: sendStored
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/com.quorum.tessera.api.SendSignedRequest"
          application/vnd.tessera-2.1+json:
            schema:
              $ref: "#/components/schemas/com.quorum.tessera.api.SendSignedRequest"
          application/octet-stream:
            schema:
              type: array
              items:
                type: string
                description: hash of pre-stored payload
                format: base64
      responses:
        "200":
          description: hash of rewrapped payload (for application/octet-stream requests)
          content:
            application/octet-stream:
              schema:
                type: string
                description: hash of rewrapped payload
                format: base64
        "201":
          description: hash of rewrapped payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/com.quorum.tessera.api.SendResponse"
            application/vnd.tessera-2.1+json:
              schema:
                $ref: "#/components/schemas/com.quorum.tessera.api.SendResponse"
  "/transaction/{hash}/participants":
    get:
      tags:
        - quorum-to-tessera
      summary: /transaction/{hash}/participants
      description: get list of recipient public keys for a transaction
      operationId: getRecipients
      parameters:
        - name: hash
          in: path
          description: hash indicating encrypted payload to get recipients for
          required: true
          schema:
            type: string
            format: base64
      responses:
        "200":
          description: comma-separated list of recipients
          content:
            text/plain:
              schema:
                type: string
                description: comma-separated list of recipients
              example: ROAZBWtSacxXQrOe3FGAqJDyJjFePR5ce4TSIzmJ0Bc=,BULeR8JyUWhiuuCMU/HLA0Q5pzkYT+cHII3ZKBey3Bo=
  "/transaction/{hash}":
    get:
      tags:
        - quorum-to-tessera
      summary: /transaction/{hash}
      description: get payload from database, decrypt, and return
      operationId: getDecryptedPayloadJsonUrl
      parameters:
        - name: hash
          in: path
          description: hash indicating encrypted payload to retrieve from database
          required: true
          schema:
            type: string
            format: base64
        - name: to
          in: query
          description: (optional) public key of recipient of the encrypted payload; used
            in decryption; if not provided, decryption is attempted with all
            known recipient keys in turn
          schema:
            type: string
            format: base64
        - name: isRaw
          in: query
          description: >-
            (optional) indicates whether the payload is raw; determines which
            database the payload is retrieved from; possible values

            * true - for pre-stored payloads in the "raw" database

            * false (default) - for already sent payloads in "standard" database
          schema:
            type: string
      responses:
        "200":
          description: decrypted payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/com.quorum.tessera.api.ReceiveResponse"
            application/vnd.tessera-2.1+json:
              schema:
                $ref: "#/components/schemas/com.quorum.tessera.api.ReceiveResponse"
    delete:
      tags:
        - quorum-to-tessera
      summary: /transaction/{hash}
      description: delete payload from database
      operationId: delete
      parameters:
        - name: hash
          in: path
          description: hash indicating encrypted payload to delete from database
          required: true
          schema:
            type: string
            format: base64
      responses:
        "204":
          description: delete successful
  /send:
    post:
      tags:
        - quorum-to-tessera
      summary: /send
      description: encrypts a payload, stores result in database, and publishes result
        to recipients
      operationId: encryptStoreAndSendJson
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/com.quorum.tessera.api.SendRequest"
          application/vnd.tessera-2.1+json:
            schema:
              $ref: "#/components/schemas/com.quorum.tessera.api.SendRequest"
      responses:
        "200":
          description: hash returned when running in orion mode
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/com.quorum.tessera.api.SendResponse"
        "201":
          description: encrypted payload hash
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/com.quorum.tessera.api.SendResponse"
            application/vnd.tessera-2.1+json:
              schema:
                $ref: "#/components/schemas/com.quorum.tessera.api.SendResponse"
  /keys:
    get:
      tags:
        - third-party
      summary: /keys
      description: get all public keys managed by the server's enclave
      operationId: getPublicKeys
      responses:
        "200":
          description: server's public keys
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/com.quorum.tessera.thirdparty.model.GetPublicKeysRe\
                  sponse"
  /partyinfo/keys:
    get:
      tags:
        - third-party
      summary: /partyinfo/keys
      description: get public keys of all known nodes in the network, including the
        server's own keys
      operationId: getPartiesPublicKeys
      responses:
        "200":
          description: known nodes' public keys
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/com.quorum.tessera.thirdparty.model.GetPublicKeysRe\
                  sponse"
components:
  schemas:
    com.quorum.tessera.api.StoreRawRequest:
      required:
        - payload
      type: object
      properties:
        payload:
          maxLength: 2147483647
          minLength: 1
          type: string
          description: data to be encrypted and stored
          format: base64
        from:
          type: string
          description: public key identifying the key pair that will be used in the
            encryption; if not set, default used
          format: base64
    com.quorum.tessera.api.StoreRawResponse:
      type: object
      properties:
        key:
          type: string
          description: hash of encrypted payload
          format: base64
    com.quorum.tessera.p2p.model.GetPartyInfoResponse:
      type: object
      properties:
        url:
          type: string
          description: server's url
        keys:
          type: array
          items:
            $ref: "#/components/schemas/com.quorum.tessera.p2p.model.Key"
        peers:
          type: array
          items:
            $ref: "#/components/schemas/com.quorum.tessera.p2p.model.Peer"
    com.quorum.tessera.p2p.model.Key:
      type: object
      properties:
        key:
          type: string
          description: known public key of peer
          format: base64
        url:
          type: string
          description: public key's corresponding peer url
    com.quorum.tessera.p2p.model.Peer:
      type: object
      properties:
        url:
          type: string
          description: peer's server url
    com.quorum.tessera.p2p.recovery.PushBatchRequest:
      type: object
      properties:
        encodedPayloads:
          type: array
          items:
            type: string
            description: list of encoded payloads
            format: byte
    com.quorum.tessera.p2p.resend.ResendRequest:
      required:
        - publicKey
        - type
      type: object
      properties:
        type:
          type: string
          enum:
            - ALL
            - INDIVIDUAL
        publicKey:
          type: string
          description: resend transactions involving this public key
          format: base64
        key:
          type: string
          description: hash of encoded transaction (INDIVIDUAL only)
          format: base64
    com.quorum.tessera.p2p.recovery.ResendBatchResponse:
      type: object
      properties:
        total:
          type: integer
          description: count of total transactions being resent
          format: int64
    com.quorum.tessera.p2p.recovery.ResendBatchRequest:
      required:
        - publicKey
      type: object
      properties:
        publicKey:
          type: string
          description: resend transactions involving this public key
          format: base64
        batchSize:
          type: integer
          description: default value is used if not provided
          format: int32
    com.quorum.tessera.api.BesuReceiveResponse:
      type: object
      properties:
        payload:
          type: string
          description: decrypted ciphertext payload
          format: base64
        senderKey:
          type: string
          description: public key of the transaction sender
          format: base64
        privacyGroupId:
          type: string
          description: privacy group id of the transaction
          format: base64
    com.quorum.tessera.api.ReceiveRequest:
      required:
        - key
      type: object
      properties:
        key:
          maxLength: 2147483647
          minLength: 1
          type: string
          description: hash indicating encrypted payload to retrieve from database
          format: base64
        to:
          maxLength: 2147483647
          minLength: 1
          type: string
          description: (optional) public key of recipient of the encrypted payload; used
            in decryption; if not provided, decryption is attempted with all
            known recipient keys in turn
          format: base64
        raw:
          type: boolean
    com.quorum.tessera.api.SendRequest:
      required:
        - payload
      type: object
      properties:
        payload:
          maxLength: 2147483647
          minLength: 1
          type: string
          description: private tx data to be encrypted
          format: base64
        from:
          type: string
          description: public key identifying the sender of the payload
          format: base64
        to:
          type: array
          description: public keys identifying the recipients of the payload
          items:
            type: string
            format: base64
        privacyFlag:
          type: integer
          description: |-
            the privacy mode of the transaction
            * 0 = standard private
            * 1 = party protection
            * 3 = private-state validation
          format: int32
          enum:
            - 0
            - 1
            - 3
        affectedContractTransactions:
          type: array
          description: encoded payload hashes identifying all affected private contracts
            after tx simulation
          items:
            type: string
            format: base64
        execHash:
          type: string
          description: execution hash; merkle root of all affected contracts after tx
            simulation
          format: base64
        privacyGroupId:
          type: string
          description: privacy group id of the payload
          format: base64
    com.quorum.tessera.api.PayloadEncryptResponse:
      type: object
      properties:
        senderKey:
          type: string
          description: public key identifying the sender of the payload
          format: base64
        cipherText:
          type: string
          description: encrypted data
          format: base64
        cipherTextNonce:
          type: string
          description: nonce used in data encryption
          format: base64
        recipientBoxes:
          type: array
          description: master key used in data encryption, wrapped for each payload
            recipient
          items:
            type: string
            format: base64
        recipientNonce:
          type: string
          description: nonce used in master encryption
          format: base64
        recipientKeys:
          type: array
          description: public keys identifying each recipient of the payload
          items:
            type: string
            format: base64
        privacyMode:
          type: integer
          description: |-
            the privacy mode of the transaction
            * 0 = standard private
            * 1 = party protection
            * 3 = private-state validation
          format: int32
          enum:
            - 0
            - 1
            - 3
        affectedContractTransactions:
          type: object
          additionalProperties:
            type: string
            description: mapping of encoded payload hashes (base64 encoded) to security
              hashes (base64 encoded)
            format: Map<TxHash, SecurityHash>
          description: mapping of encoded payload hashes (base64 encoded) to security
            hashes (base64 encoded)
          format: Map<TxHash, SecurityHash>
        execHash:
          type: string
          description: execution hash; merkle root of all affected contracts after tx
            simulation
          format: base64
    com.quorum.tessera.api.PayloadDecryptRequest:
      type: object
      properties:
        senderKey:
          type: string
          description: public key identifying the sender of the payload
          format: base64
        cipherText:
          type: string
          description: data to be decrypted
          format: base64
        cipherTextNonce:
          type: string
          description: nonce to use in data decryption
          format: base64
        recipientBoxes:
          type: array
          description: master key used in data decryption, wrapped for each payload
            recipient
          items:
            type: string
            format: base64
        recipientNonce:
          type: string
          description: nonce to use to unwrap master key
          format: base64
        recipientKeys:
          type: array
          description: public keys identifying each recipient of the payload
          items:
            type: string
            format: base64
        privacyMode:
          type: integer
          description: |-
            the privacy mode of the transaction
            * 0 = standard private
            * 1 = party protection
            * 3 = private-state validation
          format: int32
          enum:
            - 0
            - 1
            - 3
        affectedContractTransactions:
          type: object
          additionalProperties:
            type: string
            description: mapping of encoded payload hashes (base64 encoded) to security
              hashes (base64 encoded)
            format: Map<TxHash, SecurityHash>
          description: mapping of encoded payload hashes (base64 encoded) to security
            hashes (base64 encoded)
          format: Map<TxHash, SecurityHash>
        execHash:
          type: string
          description: execution hash; merkle root of all affected contracts after tx
            simulation
          format: base64
    com.quorum.tessera.api.ReceiveResponse:
      type: object
      properties:
        payload:
          type: string
          description: decrypted ciphertext payload
          format: base64
        privacyFlag:
          type: integer
          description: |-
            the privacy mode of the transaction
            * 0 = standard private
            * 1 = party protection
            * 3 = private-state validation
          format: int32
          enum:
            - 0
            - 1
            - 3
        affectedContractTransactions:
          type: array
          description: encoded payload hashes identifying all affected private contracts
            after tx simulation
          format: base64
          items:
            type: string
            description: encoded payload hashes identifying all affected private contracts
              after tx simulation
            format: base64
        execHash:
          type: string
          description: execution hash; merkle root of all affected contracts after tx
            simulation
          format: base64
        managedParties:
          type: array
          description: participant public keys of key pairs managed by the enclave of this
            Tessera instance
          format: base64
          items:
            type: string
            description: participant public keys of key pairs managed by the enclave of this
              Tessera instance
            format: base64
        senderKey:
          type: string
          description: public key of the transaction sender
          format: base64
        privacyGroupId:
          type: string
          description: privacy group id of the transaction
          format: base64
    com.quorum.tessera.api.PrivacyGroupRetrieveRequest:
      required:
        - privacyGroupId
      type: object
      properties:
        privacyGroupId:
          maxLength: 2147483647
          minLength: 1
          type: string
          description: id identifying the privacy group to retrieve
          format: base64
    com.quorum.tessera.api.PrivacyGroupResponse:
      type: object
      properties:
        privacyGroupId:
          type: string
          description: id of the privacy group
          format: base64
        name:
          type: string
          description: name of the privacy group
        description:
          type: string
          description: description of the privacy group
        type:
          type: string
          description: type of the privacy group
          enum:
            - PANTHEON
            - LEGACY
        members:
          type: array
          description: public keys of the members of the privacy group
          items:
            type: string
            format: base64
    com.quorum.tessera.api.PrivacyGroupRequest:
      type: object
      properties:
        addresses:
          type: array
          description: public keys identifying the members of the privacy group
          items:
            type: string
            format: base64
        from:
          type: string
          description: public key identifying the sender of the request
          format: base64
        name:
          type: string
          description: name of the privacy group
        description:
          type: string
          description: description of the privacy group
    com.quorum.tessera.api.PrivacyGroupSearchRequest:
      required:
        - addresses
      type: object
      properties:
        addresses:
          type: array
          description: public keys of the members of the privacy group
          items:
            type: string
            format: base64
    com.quorum.tessera.api.PrivacyGroupDeleteRequest:
      required:
        - privacyGroupId
      type: object
      properties:
        privacyGroupId:
          maxLength: 2147483647
          minLength: 1
          type: string
          description: id identifying the privacy group to delete
          format: base64
        from:
          type: string
          description: public key identifying the sender of the request
          format: base64
    com.quorum.tessera.api.DeleteRequest:
      required:
        - key
      type: object
      properties:
        key:
          maxLength: 2147483647
          minLength: 1
          type: string
          description: hash indicating encrypted payload to delete from database
          format: base64
    com.quorum.tessera.api.SendSignedRequest:
      required:
        - hash
      type: object
      properties:
        hash:
          maxLength: 2147483647
          minLength: 1
          type: string
          description: hash of pre-stored payload
          format: base64
        to:
          type: array
          description: public keys identifying the recipients of the payload
          items:
            type: string
            format: base64
        privacyFlag:
          type: integer
          description: |-
            the privacy mode of the transaction
            * 0 = standard private
            * 1 = party protection
            * 3 = private-state validation
          format: int32
          enum:
            - 0
            - 1
            - 3
        affectedContractTransactions:
          type: array
          description: encoded payload hashes identifying all affected private contracts
            after tx simulation
          items:
            type: string
            format: base64
        execHash:
          type: string
          description: execution hash; merkle root of all affected contracts after tx
            simulation
          format: base64
        privacyGroupId:
          type: string
          description: privacy group id of the payload
          format: base64
    com.quorum.tessera.api.SendResponse:
      type: object
      properties:
        key:
          type: string
          description: encrypted payload hash
          format: base64
        managedParties:
          type: array
          description: participant public keys managed by the enclave of this Tessera node
          format: base64
          items:
            type: string
            description: participant public keys managed by the enclave of this Tessera node
            format: base64
        senderKey:
          type: string
          description: public key of the transaction sender
          format: base64
    com.quorum.tessera.thirdparty.model.GetPublicKeysResponse:
      type: object
      properties:
        keys:
          type: array
          items:
            $ref: "#/components/schemas/com.quorum.tessera.thirdparty.model.Key"
    com.quorum.tessera.thirdparty.model.Key:
      type: object
      properties:
        key:
          type: string
          description: public key
          format: base64
